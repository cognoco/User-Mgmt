/**
 * API Error Codes
 * 
 * Standardized error codes for API responses across all domains.
 * These codes help clients identify specific error conditions and handle them appropriately.
 */

// Auth domain error codes
export const AUTH_ERROR_CODES = {
  UNAUTHORIZED: 'AUTH_ACCESS_001',
  FORBIDDEN: 'AUTH_ACCESS_002',
  INVALID_CREDENTIALS: 'AUTH_LOGIN_001',
  EMAIL_NOT_VERIFIED: 'AUTH_LOGIN_002',
  MFA_REQUIRED: 'AUTH_LOGIN_003',
  ACCOUNT_LOCKED: 'AUTH_LOGIN_004',
  PASSWORD_EXPIRED: 'AUTH_LOGIN_005',
  SESSION_EXPIRED: 'AUTH_SESSION_001',
  OAUTH_ERROR: 'AUTH_OAUTH_001',
  CONFLICT: 'AUTH_CONFLICT_001',
} as const;

// User domain error codes
export const USER_ERROR_CODES = {
  NOT_FOUND: 'USER_GENERAL_001',
  ALREADY_EXISTS: 'USER_GENERAL_002',
  INVALID_DATA: 'USER_VALIDATION_001',
  UPDATE_FAILED: 'USER_GENERAL_003',
  DELETE_FAILED: 'USER_GENERAL_004',
} as const;

// Team domain error codes
export const TEAM_ERROR_CODES = {
  NOT_FOUND: 'TEAM_GENERAL_001',
  ALREADY_EXISTS: 'TEAM_GENERAL_002',
  INVALID_DATA: 'TEAM_VALIDATION_001',
  UPDATE_FAILED: 'TEAM_GENERAL_003',
  DELETE_FAILED: 'TEAM_GENERAL_004',
  MEMBER_NOT_FOUND: 'TEAM_MEMBER_001',
  MEMBER_ALREADY_EXISTS: 'TEAM_MEMBER_002',
} as const;

// Permission domain error codes
export const PERMISSION_ERROR_CODES = {
  NOT_FOUND: 'PERMISSION_GENERAL_001',
  ALREADY_EXISTS: 'PERMISSION_GENERAL_002',
  INVALID_DATA: 'PERMISSION_VALIDATION_001',
  UPDATE_FAILED: 'PERMISSION_GENERAL_003',
  DELETE_FAILED: 'PERMISSION_GENERAL_004',
  ASSIGNMENT_FAILED: 'PERMISSION_ASSIGN_001',
} as const;

// Relationship domain error codes
export const RELATIONSHIP_ERROR_CODES = {
  HIERARCHY_ERROR: 'RELATIONSHIP_GENERAL_001',
  INCONSISTENT_ENTITY: 'RELATIONSHIP_GENERAL_002',
  CONSTRAINT_VIOLATION: 'RELATIONSHIP_GENERAL_003',
  PARTIAL_OPERATION: 'RELATIONSHIP_GENERAL_004',
} as const;

// Validation error codes
export const VALIDATION_ERROR_CODES = {
  INVALID_REQUEST: 'VALIDATION_REQUEST_001',
  MISSING_REQUIRED_FIELD: 'VALIDATION_REQUEST_002',
  INVALID_FORMAT: 'VALIDATION_REQUEST_003',
} as const;

// Server error codes
export const SERVER_ERROR_CODES = {
  INTERNAL_ERROR: 'SERVER_GENERAL_001',
  SERVICE_UNAVAILABLE: 'SERVER_GENERAL_002',
  DATABASE_ERROR: 'SERVER_GENERAL_003',
  OPERATION_FAILED: 'SERVER_GENERAL_004',
  RETRIEVAL_FAILED: 'SERVER_GENERAL_005',
  DELETE_FAILED: 'SERVER_GENERAL_006',
} as const;

// Billing/Payment error codes
export const BILLING_ERROR_CODES = {
  PAYMENT_FAILED: 'BILLING_PAYMENT_FAILED',
  PROVIDER_ERROR: 'BILLING_PROVIDER_ERROR',
  PERMISSION_DENIED: 'BILLING_PERMISSION_DENIED',
  STATE_MISMATCH: 'BILLING_STATE_MISMATCH',
} as const;

// Combine all error codes for easy export
export const ERROR_CODES = {
  ...AUTH_ERROR_CODES,
  ...USER_ERROR_CODES,
  ...TEAM_ERROR_CODES,
  ...PERMISSION_ERROR_CODES,
  ...RELATIONSHIP_ERROR_CODES,
  ...VALIDATION_ERROR_CODES,
  ...SERVER_ERROR_CODES,
  ...BILLING_ERROR_CODES,
} as const;

// HTTP status code mapping for each error code
export const ERROR_STATUS_MAP: Record<ErrorCode, number> = {
  // Auth
  [AUTH_ERROR_CODES.UNAUTHORIZED]: 401,
  [AUTH_ERROR_CODES.FORBIDDEN]: 403,
  [AUTH_ERROR_CODES.INVALID_CREDENTIALS]: 401,
  [AUTH_ERROR_CODES.EMAIL_NOT_VERIFIED]: 403,
  [AUTH_ERROR_CODES.MFA_REQUIRED]: 403,
  [AUTH_ERROR_CODES.ACCOUNT_LOCKED]: 403,
  [AUTH_ERROR_CODES.PASSWORD_EXPIRED]: 403,
  [AUTH_ERROR_CODES.SESSION_EXPIRED]: 401,
  [AUTH_ERROR_CODES.OAUTH_ERROR]: 400,
  [AUTH_ERROR_CODES.CONFLICT]: 409,

  // User
  [USER_ERROR_CODES.NOT_FOUND]: 404,
  [USER_ERROR_CODES.ALREADY_EXISTS]: 409,
  [USER_ERROR_CODES.INVALID_DATA]: 400,
  [USER_ERROR_CODES.UPDATE_FAILED]: 500,
  [USER_ERROR_CODES.DELETE_FAILED]: 500,

  // Team
  [TEAM_ERROR_CODES.NOT_FOUND]: 404,
  [TEAM_ERROR_CODES.ALREADY_EXISTS]: 409,
  [TEAM_ERROR_CODES.INVALID_DATA]: 400,
  [TEAM_ERROR_CODES.UPDATE_FAILED]: 500,
  [TEAM_ERROR_CODES.DELETE_FAILED]: 500,
  [TEAM_ERROR_CODES.MEMBER_NOT_FOUND]: 404,
  [TEAM_ERROR_CODES.MEMBER_ALREADY_EXISTS]: 409,

  // Permission
  [PERMISSION_ERROR_CODES.NOT_FOUND]: 404,
  [PERMISSION_ERROR_CODES.ALREADY_EXISTS]: 409,
  [PERMISSION_ERROR_CODES.INVALID_DATA]: 400,
  [PERMISSION_ERROR_CODES.UPDATE_FAILED]: 500,
  [PERMISSION_ERROR_CODES.DELETE_FAILED]: 500,
  [PERMISSION_ERROR_CODES.ASSIGNMENT_FAILED]: 500,

  // Relationship
  [RELATIONSHIP_ERROR_CODES.HIERARCHY_ERROR]: 400,
  [RELATIONSHIP_ERROR_CODES.INCONSISTENT_ENTITY]: 400,
  [RELATIONSHIP_ERROR_CODES.CONSTRAINT_VIOLATION]: 409,
  [RELATIONSHIP_ERROR_CODES.PARTIAL_OPERATION]: 500,

  // Validation
  [VALIDATION_ERROR_CODES.INVALID_REQUEST]: 400,
  [VALIDATION_ERROR_CODES.MISSING_REQUIRED_FIELD]: 400,
  [VALIDATION_ERROR_CODES.INVALID_FORMAT]: 400,

  // Server
  [SERVER_ERROR_CODES.INTERNAL_ERROR]: 500,
  [SERVER_ERROR_CODES.SERVICE_UNAVAILABLE]: 503,
  [SERVER_ERROR_CODES.DATABASE_ERROR]: 500,
  [SERVER_ERROR_CODES.OPERATION_FAILED]: 500,
  [SERVER_ERROR_CODES.RETRIEVAL_FAILED]: 500,
  [SERVER_ERROR_CODES.DELETE_FAILED]: 500,

  // Billing
  [BILLING_ERROR_CODES.PAYMENT_FAILED]: 402,
  [BILLING_ERROR_CODES.PROVIDER_ERROR]: 502,
  [BILLING_ERROR_CODES.PERMISSION_DENIED]: 403,
  [BILLING_ERROR_CODES.STATE_MISMATCH]: 409,
};

// Type for all error codes
export type ErrorCode = typeof ERROR_CODES[keyof typeof ERROR_CODES];
