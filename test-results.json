{"numTotalTestSuites":2,"numPassedTestSuites":2,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":9,"numPassedTests":9,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1749753821857,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should successfully remove a team member","status":"passed","title":"should successfully remove a team member","duration":13.23070000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 401 when user is not authenticated","status":"passed","title":"should return 401 when user is not authenticated","duration":2.9110999999998057,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 403 when user lacks permission","status":"passed","title":"should return 403 when user lacks permission","duration":1.5605000000000473,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 400 when trying to remove self","status":"passed","title":"should return 400 when trying to remove self","duration":10.021299999999883,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 400 when trying to remove last admin","status":"passed","title":"should return 400 when trying to remove last admin","duration":4.863100000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 404 when team member is not found","status":"passed","title":"should return 404 when team member is not found","duration":5.879500000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 400 when memberId is invalid","status":"passed","title":"should return 400 when memberId is invalid","duration":3.371599999999944,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 403 when removing member from another team","status":"passed","title":"should return 403 when removing member from another team","duration":4.43060000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["DELETE /api/team/members/[memberId]"],"fullName":"DELETE /api/team/members/[memberId] should return 500 when database operation fails","status":"passed","title":"should return 500 when database operation fails","duration":7.923199999999724,"failureMessages":[],"meta":{}}],"startTime":1749753823390,"endTime":1749753823444.923,"status":"passed","message":"","name":"C:/Dev/Projects/Products/Apps/user-management-reorganized/app/api/team/members/[memberId]/__tests__/route.test.ts"}]}